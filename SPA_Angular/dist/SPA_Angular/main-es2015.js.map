{"version":3,"sources":["./src/app/UsersWithEvents/UsersWithEvents.component.ts","./src/app/UsersWithEvents/UsersWithEvents.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/UsersWithEvents/ChangeNameDialog/ChangeNameDialog.component.ts","./src/app/UsersWithEvents/ChangeNameDialog/ChangeNameDialog.component.html","./src/app/HTTPService.ts","./src/app/Models/UserStatistics.ts","./src/app/Users/Users.component.ts","./src/app/Users/Users.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\nimport * as _ from 'lodash'; \r\nimport * as signalR from '@aspnet/signalr';\r\n\r\nimport { UserStatistics } from '../Models/UserStatistics';  \r\nimport { HTTPService } from '../HTTPService';\r\nimport { Events } from '../Models/Events';\r\nimport { ChangeNameDialogComponent } from './ChangeNameDialog/ChangeNameDialog.component';\r\n\r\n@Component({\r\n    selector: 'UsersWithEvents-component',\r\n    templateUrl: './UsersWithEvents.component.html',\r\n    styleUrls: ['./UsersWithEvents.component.css']\r\n})\r\n\r\nexport class UsersWithEventsComponent implements OnInit, OnDestroy { \r\n    displayedColumnsUsers: string[] = ['name', 'date'];\r\n    displayedColumnsEvents: string[] = ['name', 'date', 'description', 'level'];\r\n\r\n    users: UserStatistics[] = [];\r\n    user: UserStatistics = new UserStatistics;\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl('https://localhost:5001/api')\r\n        .build();\r\n\r\n    private subscription: Subscription;\r\n    constructor(private http: HTTPService, private router: Router, private activateRoute: ActivatedRoute, public dialog: MatDialog){\r\n        this.subscription = activateRoute.params.subscribe(params=>this.selectedUserID=params['id']);\r\n    }\r\n\r\n    ngOnInit(): void{    \r\n        this.http.getStatisticsList().subscribe((data:UserStatistics[]) => {\r\n            this.users = data;\r\n\r\n            this.user = this.users.find(x => x.id == this.selectedUserID);\r\n            this.http.getEventsForUser(this.selectedUserID).subscribe((data:Events[]) => {\r\n                this.user.events = data;\r\n                this.displayedEvents = this.user.events;\r\n                this.enteringDescription = false;\r\n            });\r\n        });\r\n\r\n        this.connection.on('update statistics', data => {\r\n            this.http.getStatisticsList().subscribe((data:UserStatistics[]) => this.users=data);\r\n        });\r\n        \r\n        this.connection.on('update users', data => {\r\n            this.http.getStatisticsList().subscribe((data:UserStatistics[]) => {\r\n                this.users = data;\r\n                this.http.getUsersList().subscribe((data:UserStatistics[]) => {\r\n                    this.users.forEach(user => {\r\n                        user.description = data.find(x => x.id == user.id).description;\r\n                    });\r\n                })\r\n            });\r\n        });\r\n\r\n        this.connection.on('update events ' + this.selectedUserID, data => {\r\n            this.http.getEventsForUser(this.selectedUserID).subscribe((data:Events[]) => {\r\n                this.user.events = data;\r\n                this.displayedEvents = data;\r\n            });\r\n        });\r\n\r\n        this.connection.start();\r\n    }\r\n\r\n    ngOnDestroy(): void{\r\n        this.connection.off('update statistics');\r\n        this.connection.off('update users');\r\n        this.connection.off('update events ' + this.selectedUserID);\r\n\r\n        this.connection.stop();\r\n    }\r\n\r\n    setUser(user) {\r\n        this.connection.off('update events ' + this.selectedUserID);\r\n\r\n        this.selectedUserID = user.id;\r\n\r\n        this.router.navigate(['/users', user.id]);\r\n\r\n        this.user = this.users.find(x => x.id == this.selectedUserID);\r\n        this.http.getEventsForUser(this.selectedUserID).subscribe((data:Events[]) => {\r\n            this.user.events = data;\r\n            this.displayedEvents = this.user.events;\r\n            this.enteringDescription = false;\r\n        });\r\n\r\n        this.connection.on('update events ' + this.selectedUserID, data => {\r\n            this.http.getEventsForUser(this.selectedUserID).subscribe((data:Events[]) => {\r\n                this.user.events = data;\r\n                this.displayedEvents = data;\r\n            });\r\n        });\r\n    }\r\n\r\n    selectedUserID: string;\r\n    enteringDescription: boolean = false;\r\n    displayedEvents: Events[] = [];\r\n    \r\n    createDescription() {\r\n        this.http.createEventsDescription(this.displayedEvents);\r\n\r\n        this.changeEnteringDescription();\r\n    }\r\n\r\n    changeEnteringDescription() {\r\n        this.enteringDescription = !this.enteringDescription;\r\n\r\n        if (this.enteringDescription) {\r\n            this.displayedColumnsEvents = ['name', 'description'];\r\n            this.displayedEvents = _.uniqBy(this.user.events, 'name');\r\n        }\r\n        else {\r\n            this.displayedColumnsEvents = ['name', 'date', 'description'];\r\n            this.displayedEvents = this.user.events;\r\n        }\r\n    }\r\n\r\n    deleteEvents() {\r\n        this.http.deleteEvents(this.selectedUserID);\r\n    }\r\n\r\n    openDialog() {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.data = { user: this.user };\r\n        let dialogRef = this.dialog.open(ChangeNameDialogComponent, dialogConfig);\r\n\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            console.log(value); \r\n        });\r\n    }\r\n}\r\n\r\n","<div class=\"users\">\r\n    <table mat-table [dataSource]=\"users\" width =\"100%\">\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Имя узла </th>\r\n            <td mat-cell *matCellDef=\"let item\" (click) = \"setUser(item)\"> {{item.name}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"date\">\r\n            <th mat-header-cell *matHeaderCellDef> Дата последней статистики </th>\r\n            <td mat-cell *matCellDef=\"let item\" (click) = \"setUser(item)\"> {{item.date}} </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumnsUsers\"></tr>\r\n        <tr mat-row *matRowDef=\"let user; columns: displayedColumnsUsers;\" \r\n            [ngClass]=\"{'highlight': selectedUserID == user.id}\" \r\n            (click)=\"setUser(user)\"></tr>\r\n    </table>\r\n</div>\r\n<div class=\"events\">\r\n    <h2>{{user.name}}</h2>\r\n    <button class=\"edit\" mat-stroked-button (click)=\"openDialog()\">Редактировать пользователя</button>\r\n    <button class=\"delete\" (click) = \"deleteEvents()\" mat-stroked-button>Удалить логи на узле</button>\r\n    <p>Идентификатор: {{user.id}}</p>\r\n    <p>Версия ПО ViPNet Client: {{user.version}}</p>\r\n    <b>События ViPNet Client</b>\r\n    <button class=\"edit\" *ngIf=\"!enteringDescription\" mat-stroked-button (click) = \"changeEnteringDescription()\">Редактировать описания</button>\r\n    <button class=\"confirm\" *ngIf=\"enteringDescription\" mat-stroked-button (click) = \"createDescription()\">Подтвердить</button>\r\n    <button class=\"cancel\" *ngIf=\"enteringDescription\" mat-stroked-button (click) = \"changeEnteringDescription()\">Отменить</button>\r\n\r\n    <table mat-table [dataSource]=\"displayedEvents\"  width =\"100%\">\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Событие </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.name}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"date\">\r\n            <th mat-header-cell *matHeaderCellDef> Дата </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.date}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef> Описание </th>\r\n            <td mat-cell *matCellDef=\"let item\"> \r\n                <p *ngIf=\"!enteringDescription\">{{item.description}}</p>\r\n                <div *ngIf=\"enteringDescription\">\r\n                    <mat-form-field>\r\n                        <input matInput type=\"text\" [(ngModel)]=\"item.description\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"level\">\r\n            <th mat-header-cell *matHeaderCellDef> Уровень </th>\r\n            <td mat-cell *matCellDef=\"let item\"> {{item.level}} </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumnsEvents\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumnsEvents;\"></tr>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'my-app',\r\n    templateUrl: `./app.component.html`,\r\n    styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit { \r\n    constructor(private router: Router){}\r\n\r\n    ngOnInit(): void {  \r\n        this.router.navigate(['/users']);\r\n    }\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { UsersComponent } from './Users/Users.component';\r\nimport { UsersWithEventsComponent } from './UsersWithEvents/UsersWithEvents.component';\r\nimport { ChangeNameDialogComponent } from './UsersWithEvents/ChangeNameDialog/ChangeNameDialog.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst appRoutes: Routes =[\r\n    { path: '', component: AppComponent },\r\n    { path: 'users', component: UsersComponent },\r\n    { path: 'users/:id', component: UsersWithEventsComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports:      [ BrowserModule, FormsModule, HttpClientModule, \r\n                    BrowserAnimationsModule, MatTableModule, MatButtonModule, \r\n                    MatInputModule, RouterModule.forRoot(appRoutes), MatDialogModule, MatDividerModule ],\r\n    declarations: [ AppComponent, UsersComponent, UsersWithEventsComponent, ChangeNameDialogComponent ],\r\n    bootstrap:    [ AppComponent ],\r\n    entryComponents: [ ChangeNameDialogComponent ]\r\n})\r\nexport class AppModule { }","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HTTPService } from '../../HTTPService';\r\n\r\n@Component({\r\n    selector: 'ChangeNameDialogComponent',\r\n    templateUrl: './ChangeNameDialog.component.html'\r\n  })\r\n\r\n  export class ChangeNameDialogComponent {\r\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<ChangeNameDialogComponent>, private http: HTTPService) {}\r\n    \r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    save() {\r\n        this.dialogRef.close(this.data.user);\r\n        this.http.changeUserName(this.data.user);\r\n    }\r\n}\r\n\r\n","<h1 mat-dialog-title>Устройство</h1>\r\n<mat-divider></mat-divider>\r\n\r\n<div mat-dialog-content>\r\n    <mat-form-field>\r\n        <p>Название устройства:</p>\r\n        <input matInput type=\"text\" [(ngModel)]=\"data.user.name\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <p>Описание:</p>\r\n        <textarea matInput type=\"text\" [(ngModel)]=\"data.user.description\"></textarea>\r\n    </mat-form-field>\r\n</div>\r\n                \r\n<div mat-dialog-actions>\r\n    <button mat-button (click)=\"save()\" color=\"primary\">\r\n        Сохранить\r\n    </button>\r\n    <button mat-button (click)=\"close()\">\r\n        Отмена\r\n    </button>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { UserStatistics } from './Models/UserStatistics';\r\nimport { Events } from './Models/Events';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class HTTPService{\r\n  \r\n    private data: UserStatistics[] = [];\r\n    private link: string = 'https://localhost:5001/api';\r\n\r\n    constructor(private http: HttpClient){}\r\n    \r\n    getStatisticsList() {\r\n        return this.http.get(this.link + '/statistics/UserStatistics');\r\n    }\r\n\r\n    getUsersList() {\r\n        return this.http.get(this.link + '/users/Users');\r\n    }\r\n\r\n    getEventsForUser(ID: string) {\r\n        return this.http.get(this.link + '/events/Events/descriptions/' + ID);\r\n    }\r\n\r\n    deleteEvents(ID: string) {\r\n        this.http.delete(this.link + '/events/Events?ID=' + ID).subscribe();\r\n    }\r\n\r\n    createEventsDescription(events: Events[]) {\r\n        this.http.put(this.link + '/events/Events', events).subscribe();\r\n    }\r\n\r\n    changeUserName(user: UserStatistics) {\r\n        this.http.put(this.link + '/users/Users', user).subscribe();\r\n    }\r\n}","import { Events } from './Events';\r\n\r\nexport class UserStatistics{\r\n    name: string;\r\n    id: string;\r\n    date: string;\r\n    version: string;\r\n    os: string;\r\n    description: string;\r\n\r\n\r\n    events: Events[];\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport * as signalR from '@aspnet/signalr';\r\n\r\nimport { UserStatistics } from '../Models/UserStatistics';\r\nimport { HTTPService } from '../HTTPService'\r\n\r\n@Component({\r\n    selector: 'Users-component',\r\n    templateUrl: './Users.component.html',\r\n    styleUrls: ['./Users.component.css']\r\n})\r\n\r\nexport class UsersComponent implements OnInit, OnDestroy { \r\n    displayedColumns: string[] = ['name', 'date', 'version', 'os', 'description'];\r\n\r\n    users: UserStatistics[];\r\n    selectedUserID: string;\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl('https://localhost:5001/api')\r\n        .build();\r\n\r\n    constructor(private http: HTTPService, private router: Router){}\r\n\r\n    ngOnInit(): void{\r\n        this.http.getStatisticsList().subscribe((data:UserStatistics[]) => {\r\n            this.users = data;\r\n            this.http.getUsersList().subscribe((data:UserStatistics[]) => {\r\n                this.users.forEach(user => {\r\n                    user.description = data.find(x => x.id == user.id).description;\r\n                });\r\n            })\r\n        });\r\n\r\n        this.connection.on('update statistics', data => {\r\n            this.http.getStatisticsList().subscribe((data:UserStatistics[]) => this.users=data);\r\n        });\r\n        \r\n        this.connection.on('update users', data => {\r\n            this.http.getStatisticsList().subscribe((data:UserStatistics[]) => {\r\n                this.users = data;\r\n                this.http.getUsersList().subscribe((data:UserStatistics[]) => {\r\n                    this.users.forEach(user => {\r\n                        user.description = data.find(x => x.id == user.id).description;\r\n                    });\r\n                })\r\n            });\r\n        });\r\n\r\n        this.connection.start();\r\n    }\r\n\r\n    ngOnDestroy(): void{\r\n        this.connection.off('update statistics');\r\n        this.connection.off('update users');\r\n\r\n        this.connection.stop();\r\n    }\r\n\r\n    SetUser(user){\r\n        this.selectedUserID = user.id;\r\n\r\n        this.router.navigate(['/users', user.id]);\r\n    }\r\n}","<table mat-table [dataSource]=\"users\" width =\"100%\">\r\n    <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Имя узла </th>\r\n        <td mat-cell *matCellDef=\"let item\"> {{item.name}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef> Дата последней статистики </th>\r\n        <td mat-cell *matCellDef=\"let item\"> {{item.date}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"version\">\r\n        <th mat-header-cell *matHeaderCellDef> Версия Client </th>\r\n        <td mat-cell *matCellDef=\"let item\"> {{item.version}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"os\">\r\n        <th mat-header-cell *matHeaderCellDef> Тип устройства </th>\r\n        <td mat-cell *matCellDef=\"let item\"> {{item.os}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Описание </th>\r\n        <td mat-cell *matCellDef=\"let item\"> {{item.description}} </td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let user; columns: displayedColumns;\" \r\n        [ngClass]=\"{'highlight': selectedUserID == user.id}\" \r\n        (click)=\"SetUser(user)\"></tr>\r\n</table>","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}